package com.example.vms_project.entities;

import jakarta.persistence.*;
import lombok.Data;
import lombok.ToString;
import org.hibernate.annotations.CreationTimestamp;

import java.time.LocalDateTime;
import java.math.BigDecimal;

@Data
@ToString(exclude = {"recordType", "pet", "veterinary"})
@Entity
@Table(name = "medical_records")
public class MedicalRecord {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
      @Column(nullable = false)
    private LocalDateTime visitDate;
    
    // TÄ±bbi kayÄ±t tÃ¼rÃ¼ (tablo referansÄ±)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "record_type_id", nullable = false)
    private MedicalRecordType recordType;
    
    @Column(nullable = false, length = 1000)
    private String diagnosis; // TeÅŸhis
    
    @Column(length = 1000)
    private String treatment; // Uygulanan tedavi
    
    @Column(length = 1000)
    private String medications; // Verilen ilaÃ§lar
    
    @Column(length = 2000)
    private String notes; // DetaylÄ± notlar
    
    // Vital signs (yaÅŸamsal belirtiler)
    private Double temperature; // VÃ¼cut sÄ±caklÄ±ÄŸÄ± (Â°C)
    private Integer heartRate; // Kalp atÄ±ÅŸ hÄ±zÄ± (dakika/vuruÅŸ)
    private Double weight; // AÄŸÄ±rlÄ±k (kg)
    
    // AÅŸÄ± bilgileri (eÄŸer aÅŸÄ± kaydÄ±ysa)
    private String vaccineName; // AÅŸÄ± adÄ±
    private String vaccineManufacturer; // AÅŸÄ± Ã¼reticisi
    private String vaccineBatchNumber; // AÅŸÄ± lot numarasÄ±
    private LocalDateTime nextVaccinationDate; // Sonraki aÅŸÄ± tarihi
    
    // Cerrahi operasyon bilgileri (eÄŸer cerrahi ise)
    private String surgeryType; // Operasyon tÃ¼rÃ¼
    private Integer surgeryDuration; // Operasyon sÃ¼resi (dakika)
    private String anesthesiaType; // Anestezi tÃ¼rÃ¼
    
    // Maliyet bilgileri
    private BigDecimal cost; // Tedavi maliyeti
    private String currency = "TRY"; // Para birimi
    
    // Dosya ekleri
    private String attachmentUrls; // Dosya URL'leri (virgÃ¼lle ayrÄ±lmÄ±ÅŸ)
    
    // Ä°liÅŸkiler
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "pet_id", nullable = false)
    private Pet pet;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "veterinary_id", nullable = false)
    private Veterinary veterinary;
    
    // EÄŸer randevudan geliyorsa
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "appointment_id")
    private Appointment appointment;
    
    // KayÄ±t tarihi
    @CreationTimestamp
    @Column(updatable = false)
    private LocalDateTime createdAt;
      // Son gÃ¼ncelleme tarihi
    private LocalDateTime updatedAt;
    
    // RecordType'a gÃ¶re ikon dÃ¶ndÃ¼rme (frontend iÃ§in)
    public String getTypeIcon() {
        return recordType != null ? recordType.getIcon() : "ğŸ“‹";
    }
    
    // RecordType'a gÃ¶re renk dÃ¶ndÃ¼rme (frontend iÃ§in)
    public String getTypeColor() {
        return recordType != null ? recordType.getColor() : "#6b7280";
    }
    
    @PreUpdate
    public void preUpdate() {
        updatedAt = LocalDateTime.now();
    }
}
